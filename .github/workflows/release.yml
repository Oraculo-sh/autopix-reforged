name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Extract version from tag
      id: version
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        VERSION=${TAG#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "is_prerelease=$([[ $TAG == *"-"* ]] && echo true || echo false)" >> $GITHUB_OUTPUT
    
    - name: Update version in gradle.properties
      run: |
        sed -i "s/mod_version=.*/mod_version=${{ steps.version.outputs.version }}/" gradle.properties
    
    - name: Build with Gradle
      run: ./gradlew clean build
    
    - name: Run tests
      run: ./gradlew test
    
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          awk '/^## \[${{ steps.version.outputs.tag }}\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md > release_notes.md
        else
          echo "## Changes in ${{ steps.version.outputs.tag }}" > release_notes.md
          echo "" >> release_notes.md
          echo "See commit history for detailed changes." >> release_notes.md
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: AutoPix Reforged ${{ steps.version.outputs.tag }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ steps.version.outputs.is_prerelease }}
        files: |
          build/libs/*.jar
          autopix-config-example.toml
          INSTALLATION.md
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload to CurseForge
      if: steps.version.outputs.is_prerelease == 'false'
      uses: Kir-Antipov/mc-publish@v3.3
      with:
        curseforge-id: ${{ secrets.CURSEFORGE_PROJECT_ID }}
        curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
        
        files: build/libs/*.jar
        name: AutoPix Reforged ${{ steps.version.outputs.tag }}
        version: ${{ steps.version.outputs.version }}
        version-type: release
        
        loaders: forge
        game-versions: |
          1.19.2
        
        changelog-file: release_notes.md
      continue-on-error: true
    
    - name: Upload to Modrinth
      if: steps.version.outputs.is_prerelease == 'false'
      uses: Kir-Antipov/mc-publish@v3.3
      with:
        modrinth-id: ${{ secrets.MODRINTH_PROJECT_ID }}
        modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
        
        files: build/libs/*.jar
        name: AutoPix Reforged ${{ steps.version.outputs.tag }}
        version: ${{ steps.version.outputs.version }}
        version-type: release
        
        loaders: forge
        game-versions: |
          1.19.2
        
        changelog-file: release_notes.md
      continue-on-error: true